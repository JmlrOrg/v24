{
    "abstract": "Scores based on Shapley values are widely used for providing explanations to classification results over machine learning models.  A prime example of this is the influential~ Shap-score, a version of the Shapley value that can help explain the result of a learned model on a specific entity by assigning a score to every feature. While in general computing Shapley values is a computationally intractable problem, we prove a strong positive result stating that the Shap-score can be computed in polynomial time over deterministic and decomposable Boolean circuits under the so-called product distributions on entities. Such circuits are studied in the field of Knowledge Compilation and generalize a wide range of Boolean circuits and binary decision diagrams classes, including binary decision trees, Ordered Binary Decision Diagrams (OBDDs) and Free Binary Decision Diagrams (FBDDs). Our positive result extends even beyond binary classifiers, as it continues to hold if each feature is associated with a finite domain of possible values.  We also establish the computational limits of the notion of Shap-score by observing that, under a mild condition, computing it over a class of Boolean models is always polynomially as hard as the model counting problem for that class. This implies that both determinism and decomposability are essential properties for the circuits that we consider, as removing one or the other renders the problem of computing the Shap-score intractable (namely, $\\#P$-hard). It also implies that computing Shap-scores is $\\#P$-hard even over the class of propositional formulas in DNF. Based on this negative result, we look for the existence of fully-polynomial randomized approximation schemes (FPRAS) for computing Shap-scores over such class. In stark contrast to the model counting problem for DNF formulas, which admits an FPRAS, we prove that no such FPRAS exists (under widely believed complexity assumptions) for the computation of Shap-scores. Surprisingly, this negative result holds even for the class of monotone formulas in DNF. These techniques can be further extended to prove another strong negative result: Under widely believed complexity assumptions, there is no polynomial-time algorithm that checks, given a monotone DNF formula $\\varphi$ and features $x,y$, whether the Shap-score of $x$ in $\\varphi$ is smaller than the Shap-score of $y$ in $\\varphi$.",
    "authors": [
        "Marcelo Arenas",
        "Pablo Barcelo",
        "Leopoldo Bertossi",
        "Mikael Monet"
    ],
    "emails": [
        "marenas@ing.puc.cl",
        "pbarcelo@uc.cl",
        "leopoldo.bertossi@skema.edu",
        "mikael.monet@inria.fr"
    ],
    "id": "21-0389",
    "issue": 63,
    "pages": [
        1,
        58
    ],
    "title": "On the Complexity of SHAP-Score-Based Explanations: Tractability via Knowledge Compilation and Non-Approximability Results",
    "volume": 24,
    "year": 2023
}